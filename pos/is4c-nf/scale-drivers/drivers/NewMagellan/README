Make sure ss-output is writable by the driver:
$ sudo chmod -R 777 ss-output

Check the assignment of MAGELLAN_OUTPUT_DIR in SPH_Magellan_Scales.cs
$ grep MAGELLAN_OUTPUT_DIR SPH_Magellan_Scales.cs
It should be "ss-output/", the same as the directory above.

If it isn't, open SPH_Magellan_Scales.cs in a text editor and change it.
Then re-compile pos.exe:
$ make clean
$ make

Run the driver in the forground:
$ sudo mono pos.exe
If it starts OK it will immediately say:
Reading serial data
and there may be another line of scale or scanner data such as S110000

Now scan a barcode. It should be echoed to the window running pos.exe. E.g.:
03120044618
Then put something on the scale. Expect to see something like:
S110023
where "23" is the weight, 23/100ths of a pound in this case.
Remove the thing from the scale and two more lines will probably appear:
S141
S1100000
the second indicating the scale is back to zero.
To stop the driver: ^C

You can run the driver in the foreground and use the PoS at the same time.
The items you scan and weigh (if you also enter product codes) will appear
in the transaction in the usual way.

A second attempt to run the driver in the foreground may get a message like:
$ sudo mono pos.exe

Unhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object
  at System.TermInfoDriver.CheckWindowDimensions () [0x00000] 
  at System.TermInfoDriver.get_WindowWidth () [0x00000] 
  at System.TermInfoDriver.IncrementX () [0x00000] 
  at System.TermInfoDriver.IsSpecialKey (ConsoleKeyInfo key) [0x00000] 
  at System.TermInfoDriver.IsSpecialKey (Char c) [0x00000] 
  at System.IO.CStreamWriter.Write (System.Char[] buffer, Int32 index, Int32 count) [0x00000] 
  at System.IO.CStreamWriter.Write (System.Char[] val) [0x00000] 
  at System.IO.CStreamWriter.Write (System.String val) [0x00000] 
  at System.IO.TextWriter.WriteLine (System.String value) [0x00000] 
  at System.IO.SynchronizedWriter.WriteLine (System.String value) [0x00000] 
  at System.Console.WriteLine (System.String value) [0x00000] 
  at SPH.SPH_Magellan_Scale.Read () [0x00000] 

I don't know what to do about this.
Doing again gets the same message.
Start the driver in the background, do a couple scans, stop it;
then running it in foreground may work again.

Open another terminal window and go to ss-ouput.
$ls -l will show something like:
-rwxrwxrwx 1 nobody   nogroup     8 2012-10-27 17:14 13930410
-rw-r--r-- 1 root     root        8 2012-10-27 17:34 15184740
-rw-r--r-- 1 root     root       12 2012-10-27 17:35 15206202
-rw-r--r-- 1 root     root       12 2012-10-27 17:35 15210526
-rw-r--r-- 1 root     root        8 2012-10-27 17:35 15216206
-rw-r--r-- 1 root     root        5 2012-10-27 17:35 15217402

Each file contains output like that echoed to the screen.

While the driver is running in the background,
scan and scale events are also logged to
a file named in the driver start script, posdriver-sph, for example:
/var/run/posdriver-sph/sph.log
You can watch this as it accumulates with:
$ tail -f /var/run/posdriver-sph/sph.log
Reading serial data
S110000
Received: rePoll
S110000
03120044618
Received: goodBeep
S110024
Received: goodBeep
S141
S110000
85794100187
^C to stop the display.

